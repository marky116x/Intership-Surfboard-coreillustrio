Picking up from yesterday's work, we learned more about web page design. Here's what we learned, and it's a lot.

1. How to use flex to make a page more responsive to changes in screen size. 
2.  How to style different elements on a webpage so they don't all look the same.
3. How to use a background image without having it get all blown up out of proportion, 
which can happen if you don't know the right way to put it on the page.
4. How to space things so they're in the right place, and how to use alignment to put things together in an orderly manner.

One thing I have learned is the basics of using Figma, 
a useful tool for web designers to create user interfaces. 

I learned about the following topics:
- Auto layout : to place elements in right placement
- Using different frames
- Creating frames to be used as main frames and other frames to be used as stencils, to have proper spacing .
- Positioning elements
- Importing and filling an image into a frame.



______

Programming languages.

In earlier days, code was written on paper with 

-0's and 1's. They had issues.

-Then we moved to assembly-level language.

-Then high-level language was introduced (human readable language).

There are a few things to keep in mind before writing a sentence:

Rules + meaning = Sentence that's meaningful and readable.


Programming languages are for humans. 
Machine Level language is for computers.

A compiler is like a translator. 
It is the intermediate person who helps us,
us people who write in high-level language, communicate with the computer, which can only understand low-level language, here compiler translate high level to low level language.

 It consists of three parts: 

1. symbols (alphabets, numbers, and special characters), 
2. tokens (a collection of one or more symbols), and 
3. expressions (a collection of tokens). 
It's validity is based on syntax and schements which are the Grammer .
For example, the letters A, B, and C are symbols; the string “ABC” is a token; and “A + B = C” is an expression.
